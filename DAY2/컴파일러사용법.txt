화,목 점심시간 : 11:50 ~ 12:50
수,금 점심시간 : 12:10 ~ 13:10

github.com/codenuri/ngv 에 수업에서 만든소스 실시간을 올리겠습니다.
//----------------------------------------------------------
gcc 다운 받지 않은분은 다운 받아 두세요
gcc   : linux 용 C/C++ 컴파일러
mingw : gcc 를 windows 환경에서 사용하게 하는 프로그램
        
1. google.com 에서 "mingw 11 github" 검색후 1번째 링크
   ASSET 에서 아래서 5번째
   "winlibs-x86_64-posix-seh-gcc-12.0.0-snapshot20211205-mingw-w64-9.0.0-r1.zip"
   참고 : i686xxx : 32bit 버전
         x86_64  : 64bit 버전
   OS 가 32비트 이면 : 반드시 32bit 만 사용
   OS 가 64비트 이면 : 32, 64 모두 사용가능
   
   별도의 설치 과정 필요 없음. 
   1) 압축풀고, "Mingw64" 폴더를 통째로 원하는 폴더에 복사하세요(C://Program files등)
   2) PATH 잡으면
      ==> 탐색기 => 내PC 에서 오른쪽 버튼 누르고 "속성" 선택
      ==> 나타나는 "정보"창의 오른쪽 에 있는 "고급시스템 설정"
      ==> 제일 아래 "환경변수 설정" 선택
      ==> 시스템 변수에서 "Path" 더블클릭


   3) 바로 사용가능.

2. 윈도우 "시작" 버튼을 누르고, "cmd" 입력하면 콘솔창("명령프롬프트") 실행됩니다.
   "gcc" 했을때 "no input files" 나오면 "gcc 설치 끝"
//-------------------------------------------

3. C 코드 작성후 컴파일 하기
   => 메모장 실행후 기본 코드 작성하세요.


// 교재 4page 내용입니다.

// cmd 창에서 소스가 있는 폴더로 이동후 아래 처럼 해보세요(cd 디렉토리 이름)
// cd \   => C:\ 로 이동,  D:로 이동하려면 "d:" 하세요.
// cd 디렉토리이름
// gcc first.txt  : first.txt 가 어느 언어로 작성했는지 모른다. error

// gcc -x c first.txt ==> a.exe 생성 됩니다(실행파일 입니다.)

// gcc first.c    하면 됩니다.

// 즉, 확장자는 컴파일러에게 현재 소스가 "어떤 언어인지 알려주는 역활"
// 다른 확장자로 해도 됩니다. (언어 옵션만 지정하면 됩니다.)

// 실행파일 이름 변경 : gcc first.c -o b.exe


4. cl 컴파일러(visual studio 설치시 설치되는 컴파일러)
   "시작" => "visual studio 폴더" => "개발자명령 프롬프트 실행후 사용"

5. 실습하는 방법

방법 1. 편집기와 컴파일 과정을 분리
A) 편집기로 소스를 만들고 (visual studio code(vscode), eclipse, atom 등 전용편집기
			사용시 syntax coloring 등 지원)
B) 명령프롬프트 창에서 "gcc 또는 cl" 로 컴파일


방법 2. IDE(통합개발환경 사용) : 편집기와 컴파일러를 하나의 프로그램에서 사용
                            visual studio 2019/2022등, xcode
			    visual studio 는 결국 내부적으로 cl 컴파일러사용

	

6. visual studio 사용법
A) 실행
B) 초기 설치시 "로그인여부"는 나중에 로그인 선택, 환경은 "visual C++", 테마는 아무것이나
C)











 







